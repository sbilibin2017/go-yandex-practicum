// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-yandex-practicum/internal/handlers/metric_value_path.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/go-yandex-practicum/internal/types"
)

// MockMetricGetPathService is a mock of MetricGetPathService interface.
type MockMetricGetPathService struct {
	ctrl     *gomock.Controller
	recorder *MockMetricGetPathServiceMockRecorder
}

// MockMetricGetPathServiceMockRecorder is the mock recorder for MockMetricGetPathService.
type MockMetricGetPathServiceMockRecorder struct {
	mock *MockMetricGetPathService
}

// NewMockMetricGetPathService creates a new mock instance.
func NewMockMetricGetPathService(ctrl *gomock.Controller) *MockMetricGetPathService {
	mock := &MockMetricGetPathService{ctrl: ctrl}
	mock.recorder = &MockMetricGetPathServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricGetPathService) EXPECT() *MockMetricGetPathServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMetricGetPathService) Get(ctx context.Context, metricID types.MetricID) (*types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, metricID)
	ret0, _ := ret[0].(*types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMetricGetPathServiceMockRecorder) Get(ctx, metricID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMetricGetPathService)(nil).Get), ctx, metricID)
}
