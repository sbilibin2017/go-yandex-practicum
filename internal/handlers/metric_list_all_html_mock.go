// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-yandex-practicum/internal/handlers/metric_list_all_html.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/go-yandex-practicum/internal/types"
)

// MockMetricListAllHTMLService is a mock of MetricListAllHTMLService interface.
type MockMetricListAllHTMLService struct {
	ctrl     *gomock.Controller
	recorder *MockMetricListAllHTMLServiceMockRecorder
}

// MockMetricListAllHTMLServiceMockRecorder is the mock recorder for MockMetricListAllHTMLService.
type MockMetricListAllHTMLServiceMockRecorder struct {
	mock *MockMetricListAllHTMLService
}

// NewMockMetricListAllHTMLService creates a new mock instance.
func NewMockMetricListAllHTMLService(ctrl *gomock.Controller) *MockMetricListAllHTMLService {
	mock := &MockMetricListAllHTMLService{ctrl: ctrl}
	mock.recorder = &MockMetricListAllHTMLServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricListAllHTMLService) EXPECT() *MockMetricListAllHTMLServiceMockRecorder {
	return m.recorder
}

// ListAll mocks base method.
func (m *MockMetricListAllHTMLService) ListAll(ctx context.Context) ([]types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAll", ctx)
	ret0, _ := ret[0].([]types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAll indicates an expected call of ListAll.
func (mr *MockMetricListAllHTMLServiceMockRecorder) ListAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAll", reflect.TypeOf((*MockMetricListAllHTMLService)(nil).ListAll), ctx)
}
