// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-yandex-practicum/internal/services/metric_list_all.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/go-yandex-practicum/internal/types"
)

// MockMetricListAllRepository is a mock of MetricListAllRepository interface.
type MockMetricListAllRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMetricListAllRepositoryMockRecorder
}

// MockMetricListAllRepositoryMockRecorder is the mock recorder for MockMetricListAllRepository.
type MockMetricListAllRepositoryMockRecorder struct {
	mock *MockMetricListAllRepository
}

// NewMockMetricListAllRepository creates a new mock instance.
func NewMockMetricListAllRepository(ctrl *gomock.Controller) *MockMetricListAllRepository {
	mock := &MockMetricListAllRepository{ctrl: ctrl}
	mock.recorder = &MockMetricListAllRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricListAllRepository) EXPECT() *MockMetricListAllRepositoryMockRecorder {
	return m.recorder
}

// ListAll mocks base method.
func (m *MockMetricListAllRepository) ListAll(ctx context.Context) ([]*types.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAll", ctx)
	ret0, _ := ret[0].([]*types.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAll indicates an expected call of ListAll.
func (mr *MockMetricListAllRepositoryMockRecorder) ListAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAll", reflect.TypeOf((*MockMetricListAllRepository)(nil).ListAll), ctx)
}
