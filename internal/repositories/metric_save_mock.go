// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-yandex-practicum/internal/repositories/metric_save.go

// Package repositories is a generated GoMock package.
package repositories

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/go-yandex-practicum/internal/types"
)

// MockMetricSaveRepository is a mock of MetricSaveRepository interface.
type MockMetricSaveRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMetricSaveRepositoryMockRecorder
}

// MockMetricSaveRepositoryMockRecorder is the mock recorder for MockMetricSaveRepository.
type MockMetricSaveRepositoryMockRecorder struct {
	mock *MockMetricSaveRepository
}

// NewMockMetricSaveRepository creates a new mock instance.
func NewMockMetricSaveRepository(ctrl *gomock.Controller) *MockMetricSaveRepository {
	mock := &MockMetricSaveRepository{ctrl: ctrl}
	mock.recorder = &MockMetricSaveRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricSaveRepository) EXPECT() *MockMetricSaveRepositoryMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockMetricSaveRepository) Save(ctx context.Context, metric types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, metric)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMetricSaveRepositoryMockRecorder) Save(ctx, metric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMetricSaveRepository)(nil).Save), ctx, metric)
}
